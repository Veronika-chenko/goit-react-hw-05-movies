{"version":3,"file":"static/js/417.0e964d94.chunk.js","mappings":"uRAEaA,EAAWC,EAAAA,GAAAA,GAAH,uTAGV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAWCC,EAAYJ,EAAAA,GAAAA,GAAH,2OASTK,EAAYL,EAAAA,GAAAA,IAAH,yWAcG,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,MAAlB,IAA4B,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,MAAlB,IAA6B,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,MAAME,IAAlB,IAA0B,SAAAP,GAAC,OAAIA,EAAEC,MAAMI,MAAME,IAAlB,IAGnGC,EAAWT,EAAAA,GAAAA,IAAH,kIACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAETO,EAAYV,EAAAA,GAAAA,EAAH,sEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,CAAtB,IACC,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,YAAYC,IAAxB,I,SCvCL,SAASC,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,CACbA,OAAQF,EAAWE,QAUrB,OARA,iBAAC,gHAE0BC,EAAAA,EAAAA,IAAgBN,EAAIK,GAF9C,gBAEWE,EAFX,EAEWA,KACRR,EAAYQ,GAHf,gDAKGC,QAAQC,IAAR,MALH,wDAAD,GAQO,WACLN,EAAWO,OACZ,CACF,GAAE,CAACV,KAGF,SAACpB,EAAD,UACGkB,EAASa,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACZ,UAAC7B,EAAD,YACE,SAACC,EAAD,WACE,gBACE6B,IACEH,EACII,EAAAA,GAAUJ,EACV,gGAENK,IAAKH,OAGT,UAACxB,EAAD,YACE,SAACC,EAAD,UAAYuB,KACZ,uCAAeD,UAbHb,EADJ,KAoBnB,C,2NCrDDkB,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCACCH,EAAU,kCAEVI,EAAW,mCAAG,WAAOf,GAAP,uFACLa,EAAAA,GAAAA,IAAA,oCAAuCC,GAAOd,GADzC,cACjBgB,EADiB,yBAEhBA,EAAIC,MAFY,2CAAH,sDAKXC,EAAe,mCAAG,WAAOC,EAAWnB,GAAlB,uFACTa,EAAAA,GAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDK,GAAanB,GADpD,cACrBgB,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,wDAKfG,EAAe,mCAAG,WAAOzB,EAAIK,GAAX,uFACTa,EAAAA,GAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,GAAOd,GADhC,cACrBgB,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,wDAKfhB,EAAe,mCAAG,WAAON,EAAIK,GAAX,uFACTa,EAAAA,GAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,GAAOd,GADxC,cACrBgB,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,wDAKfI,EAAe,mCAAG,WAAO1B,EAAIK,GAAX,uFACTa,EAAAA,GAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,GAAOd,GADxC,cACrBgB,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,uD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/services/Api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${p => p.theme.space[3]}px; \n    \n    @media screen and (min-width: 768px){\n        grid-template-columns: repeat(3, 1fr);\n    }\n\n    @media screen and (min-width: 1280px){\n        grid-template-columns: repeat(6, 1fr);\n    }\n`\n\nexport const MovieItem = styled.li`\n    cursor: pointer;\n    transition: box-shadow 250ms linear;\n    &:hover, \n    &:focus {\n        box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%), 1px 4px 6px rgb(0 0 0 / 16%);\n    }\n`\n\nexport const ImageWrap = styled.div`\n    height: 331px;\n    @media screen and (min-width: 768px) {\n        height: 376px;\n    }\n    @media screen and (min-width: 1280px) {\n        height: 310px;\n    }\n    \n    & img {\n        object-fit: cover;\n        display: block;\n        height: 100%;\n        width: 100%;\n        border-radius: ${p => p.theme.radii.normal} ${p => p.theme.radii.normal}  ${p => p.theme.radii.none} ${p => p.theme.radii.none};\n    }\n`\nexport const InfoWrap = styled.div`\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[2]}px;\n    padding-right: ${p => p.theme.space[2]}px;\n`\nexport const ActorName = styled.p`\n    font-size: ${p => p.theme.fontSizes.m}px;\n    font-weight: ${p => p.theme.fontWeights.bold};\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits, IMG_URL } from 'components/services/Api';\nimport {\n  CastList,\n  MovieItem,\n  ImageWrap,\n  InfoWrap,\n  ActorName,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const [castList, setCastList] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = {\n      signal: controller.signal,\n    };\n    (async function () {\n      try {\n        const { cast } = await getMovieCredits(id, signal);\n        setCastList(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n    return () => {\n      controller.abort();\n    };\n  }, [id]);\n\n  return (\n    <CastList>\n      {castList.map(({ id, profile_path, character, name }) => (\n        <MovieItem key={id}>\n          <ImageWrap>\n            <img\n              src={\n                profile_path\n                  ? IMG_URL + profile_path\n                  : 'https://www.electiondataservices.com/wp-content/uploads/2014/10/sorry-image-not-available.jpg'\n              }\n              alt={name}\n            />\n          </ImageWrap>\n          <InfoWrap>\n            <ActorName>{name}</ActorName>\n            <p>Character: {character}</p>\n          </InfoWrap>\n        </MovieItem>\n      ))}\n    </CastList>\n  );\n}\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'b57d518fc10de59d42b7f695d79e0fa4';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrending = async (signal) => {\n    const res = await axios.get(`/trending/all/day?api_key=${KEY}`, signal)\n    return res.data;\n}\n\nexport const getSearchMovies = async (queryName, signal) => {\n    const res = await axios.get(`/search/movie?api_key=${KEY}&query=${queryName}`, signal)\n    return res.data;\n}\n\nexport const getMovieDetails = async (id, signal) => {\n    const res = await axios.get(`/movie/${id}?api_key=${KEY}`, signal)\n    return res.data;\n}\n\nexport const getMovieCredits = async (id, signal) => {\n    const res = await axios.get(`/movie/${id}/credits?api_key=${KEY}`, signal)\n    return res.data;\n}\n\nexport const getMovieReviews = async (id, signal) => {\n    const res = await axios.get(`/movie/${id}/reviews?api_key=${KEY}`, signal)\n    return res.data;\n}"],"names":["CastList","styled","p","theme","space","MovieItem","ImageWrap","radii","normal","none","InfoWrap","ActorName","fontSizes","m","fontWeights","bold","Cast","useState","castList","setCastList","id","useParams","useEffect","controller","AbortController","signal","getMovieCredits","cast","console","log","abort","map","profile_path","character","name","src","IMG_URL","alt","axios","KEY","getTrending","res","data","getSearchMovies","queryName","getMovieDetails","getMovieReviews"],"sourceRoot":""}