{"version":3,"file":"static/js/607.e658059c.chunk.js","mappings":"iQAEaA,E,OAAaC,GAAAA,GAAH,0FAGZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCCG,SAASC,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,CACbA,OAAQF,EAAWE,QAWrB,OATA,iBAAC,gHAE6BC,EAAAA,EAAAA,IAAgBN,EAAIK,GAFjD,gBAEWE,EAFX,EAEWA,QACRR,EAAcQ,GAHjB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,GASO,WACLN,EAAWO,OACZ,CACF,GAAE,CAACV,KAGF,SAACT,EAAD,UACyB,IAAtBO,EAAWa,QACV,oEAEAb,EAAWc,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACb,2BACE,qCAAaD,MACb,uBAAIC,MAFGd,EADI,KAStB,C,sNCxCDe,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCACCC,EAAU,kCAEVC,EAAW,mCAAG,WAAOb,GAAP,uFACLU,EAAAA,GAAAA,IAAA,oCAAuCC,GAAOX,GADzC,cACjBc,EADiB,yBAEhBA,EAAIC,MAFY,2CAAH,sDAKXC,EAAa,mCAAG,WAAOC,EAAWjB,GAAlB,uFACPU,EAAAA,GAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDM,GAAajB,GADtD,cACnBc,EADmB,yBAElBA,EAAIC,MAFc,2CAAH,wDAKbG,EAAe,mCAAG,WAAOvB,EAAIK,GAAX,uFACTU,EAAAA,GAAAA,IAAA,iBAAoBf,EAApB,oBAAkCgB,GAAOX,GADhC,cACrBc,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,wDAKfI,EAAe,mCAAG,WAAOxB,EAAIK,GAAX,uFACTU,EAAAA,GAAAA,IAAA,iBAAoBf,EAApB,4BAA0CgB,GAAOX,GADxC,cACrBc,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,wDAKfd,EAAe,mCAAG,WAAON,EAAIK,GAAX,uFACTU,EAAAA,GAAAA,IAAA,iBAAoBf,EAApB,4BAA0CgB,GAAOX,GADxC,cACrBc,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,uD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/services/Api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.space[3]}px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'components/services/Api';\n//\nimport { ReviewList } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviewList, setReviewList] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = {\n      signal: controller.signal,\n    };\n    (async function () {\n      try {\n        const { results } = await getMovieReviews(id, signal);\n        setReviewList(results);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n\n    return () => {\n      controller.abort();\n    };\n  }, [id]);\n\n  return (\n    <ReviewList>\n      {reviewList.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        reviewList.map(({ id, author, content }) => (\n          <li key={id}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        ))\n      )}\n    </ReviewList>\n  );\n}\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'b57d518fc10de59d42b7f695d79e0fa4';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getTrending = async (signal) => {\n    const res = await axios.get(`/trending/all/day?api_key=${KEY}`, signal)\n    return res.data;\n}\n\nexport const getSearchData = async (queryName, signal) => {\n    const res = await axios.get(`/search/movie?api_key=${KEY}&query=${queryName}`, signal)\n    return res.data;\n}\n\nexport const getMovieDetails = async (id, signal) => {\n    const res = await axios.get(`/movie/${id}?api_key=${KEY}`, signal)\n    return res.data;\n}\n\nexport const getMovieCredits = async (id, signal) => {\n    const res = await axios.get(`/movie/${id}/credits?api_key=${KEY}`, signal)\n    return res.data;\n}\n\nexport const getMovieReviews = async (id, signal) => {\n    const res = await axios.get(`/movie/${id}/reviews?api_key=${KEY}`, signal)\n    return res.data;\n}"],"names":["ReviewList","styled","p","theme","space","Reviews","useState","reviewList","setReviewList","id","useParams","useEffect","controller","AbortController","signal","getMovieReviews","results","console","log","abort","length","map","author","content","axios","KEY","IMG_URL","getTrending","res","data","getSearchData","queryName","getMovieDetails","getMovieCredits"],"sourceRoot":""}